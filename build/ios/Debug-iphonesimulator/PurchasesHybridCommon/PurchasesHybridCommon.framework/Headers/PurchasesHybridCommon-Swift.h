#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
#ifndef PURCHASESHYBRIDCOMMON_SWIFT_H
#define PURCHASESHYBRIDCOMMON_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import RevenueCat;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PurchasesHybridCommon",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@interface RCPurchaseParamsBuilder (SWIFT_EXTENSION(PurchasesHybridCommon))
- (void)noOP;
@end

@class NSString;
SWIFT_CLASS_NAMED("CommonFunctionality")
@interface RCCommonFunctionality : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL simulatesAskToBuyInSandbox;)
+ (BOOL)simulatesAskToBuyInSandbox SWIFT_WARN_UNUSED_RESULT;
+ (void)setSimulatesAskToBuyInSandbox:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull appUserID;)
+ (NSString * _Nonnull)appUserID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isAnonymous;)
+ (BOOL)isAnonymous SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull hybridCommonVersion;)
+ (NSString * _Nonnull)hybridCommonVersion SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable proxyURLString;)
+ (NSString * _Nullable)proxyURLString SWIFT_WARN_UNUSED_RESULT;
+ (void)setProxyURLString:(NSString * _Nullable)newValue;
@property (nonatomic) BOOL simulatesAskToBuyInSandbox;
+ (void)setAllowSharingStoreAccount:(BOOL)allowSharingStoreAccount SWIFT_DEPRECATED_MSG("Use the set<NetworkId> functions instead");
+ (void)setDebugLogsEnabled:(BOOL)enabled SWIFT_DEPRECATED_MSG("Use setLogLevel instead");
+ (void)setLogLevel:(NSString * _Nonnull)level;
/// Sets a log handler and forwards all logs to completion function.
/// \param onLogReceived Gets a map with two keys: <code>logLevel</code> (<code>LogLevel</code>  name uppercased), and <code>message</code> (the log message)
///
+ (void)setLogHanderOnLogReceived:(void (^ _Nonnull)(NSDictionary<NSString *, NSString *> * _Nonnull))onLogReceived;
+ (void)enableAdServicesAttributionTokenCollection SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(maccatalyst,introduced=14.3) SWIFT_AVAILABILITY(macos,introduced=11.1) SWIFT_AVAILABILITY(ios,introduced=14.3);
+ (void)setPurchasesAreCompletedBy:(NSString * _Nonnull)purchasesAreCompletedBy;
+ (void)invalidateCustomerInfoCache;
+ (void)getStorefrontWithCompletion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable))completion;
+ (void)presentCodeRedemptionSheet SWIFT_AVAILABILITY(maccatalyst,unavailable) SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=14.0);
+ (BOOL)canMakePaymentsWithFeatures:(NSArray<NSNumber *> * _Nonnull)features SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RCCustomerInfo;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (NSDictionary<NSString *, id> * _Nonnull)encodeCustomerInfo:(RCCustomerInfo * _Nonnull)customerInfo SWIFT_WARN_UNUSED_RESULT;
@end

@class RCErrorContainer;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)showManageSubscriptions:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,introduced=10.15) SWIFT_AVAILABILITY(ios,introduced=13.0);
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)recordPurchaseForProductID:(NSString * _Nonnull)productID completion:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,introduced=8.0) SWIFT_AVAILABILITY(tvos,introduced=15.0) SWIFT_AVAILABILITY(macos,introduced=12.0) SWIFT_AVAILABILITY(ios,introduced=15.0);
@end

@class NSNumber;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)showStoreMessagesCompletion:(void (^ _Nonnull)(void))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=16.0);
+ (void)showStoreMessagesForTypes:(NSSet<NSNumber *> * _Nonnull)rawValues completion:(void (^ _Nonnull)(void))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=16.0);
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
/// Fetches and caches the eligible win-back offers for a given product identifier.
/// \param productIdentifier The identifier of the product to fetch win-back offers for.
///
/// \param completion A closure that receives an array of win-back offer dictionaries or an error container if something went wrong.
///
+ (void)eligibleWinBackOffersForProductIdentifier:(NSString * _Nonnull)productIdentifier completionBlock:(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchaseProduct:(NSString * _Nonnull)productIdentifier winBackOfferID:(NSString * _Nonnull)winBackOfferID completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchasePackage:(NSString * _Nonnull)packageIdentifier presentedOfferingContext:(NSDictionary<NSString *, id> * _Nonnull)presentedOfferingContext winBackOfferID:(NSString * _Nonnull)winBackOfferID completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@class RCWebPurchaseRedemption;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (RCWebPurchaseRedemption * _Nullable)parseAsWebPurchaseRedemptionWithUrlString:(NSString * _Nonnull)urlString SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isWebPurchaseRedemptionURL:(NSString * _Nonnull)urlString SWIFT_WARN_UNUSED_RESULT;
+ (void)redeemWebPurchaseWithUrlString:(NSString * _Nonnull)urlString completion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)beginRefundRequestProductId:(NSString * _Nonnull)productId completionBlock:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=15.0);
+ (void)beginRefundRequestEntitlementId:(NSString * _Nonnull)entitlementId completionBlock:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=15.0);
+ (void)beginRefundRequestForActiveEntitlementCompletion:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=15.0);
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)logInWithAppUserID:(NSString * _Nonnull)appUserID completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)logOutWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)getCustomerInfoWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)getVirtualCurrenciesWithCompletion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (NSDictionary<NSString *, id> * _Nullable)getCachedVirtualCurrencies SWIFT_WARN_UNUSED_RESULT;
+ (void)invalidateVirtualCurrenciesCache;
+ (void)overridePreferredLocale:(NSString * _Nullable)locale;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)setAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
+ (void)setEmail:(NSString * _Nullable)email;
+ (void)setPhoneNumber:(NSString * _Nullable)phoneNumber;
+ (void)setDisplayName:(NSString * _Nullable)displayName;
+ (void)setPushToken:(NSString * _Nullable)pushToken;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)getOfferingsWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)getCurrentOfferingForPlacement:(NSString * _Nonnull)placementIdentifier completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)syncAttributesAndOfferingsIfNeededWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)checkTrialOrIntroductoryPriceEligibility:(NSArray<NSString *> * _Nonnull)products completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))completion;
+ (void)getProductInfo:(NSArray<NSString *> * _Nonnull)productIds completionBlock:(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nonnull))completionBlock;
+ (void)promotionalOfferForProductIdentifier:(NSString * _Nonnull)productIdentifier discount:(NSString * _Nullable)discountIdentifier completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)setMediaSource:(NSString * _Nullable)mediaSource;
+ (void)setCampaign:(NSString * _Nullable)campaign;
+ (void)setAdGroup:(NSString * _Nullable)adGroup;
+ (void)setAd:(NSString * _Nullable)ad;
+ (void)setKeyword:(NSString * _Nullable)keyword;
+ (void)setCreative:(NSString * _Nullable)creative;
@end

@class RCStoreTransaction;
@class NSError;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)restorePurchasesWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)syncPurchasesWithCompletionBlock:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchase:(NSDictionary<NSString *, id> * _Nonnull)options completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchaseProduct:(NSString * _Nonnull)productIdentifier signedDiscountTimestamp:(NSString * _Nullable)signedDiscountTimestamp completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchasePackage:(NSString * _Nonnull)packageIdentifier presentedOfferingContext:(NSDictionary<NSString *, id> * _Nonnull)presentedOfferingContext signedDiscountTimestamp:(NSString * _Nullable)signedDiscountTimestamp completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)makeDeferredPurchase:(SWIFT_NOESCAPE void (^ _Nonnull)(void (^ _Nonnull)(RCStoreTransaction * _Nullable, RCCustomerInfo * _Nullable, NSError * _Nullable, BOOL)))startPurchase completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)collectDeviceIdentifiers;
+ (void)setAdjustID:(NSString * _Nullable)adjustID;
+ (void)setCleverTapID:(NSString * _Nullable)cleverTapID;
+ (void)setAppsflyerID:(NSString * _Nullable)appsflyerID;
+ (void)setFBAnonymousID:(NSString * _Nullable)fbAnonymousID;
+ (void)setMparticleID:(NSString * _Nullable)mParticleID;
+ (void)setMixpanelDistinctID:(NSString * _Nullable)mixpanelDistinctID;
+ (void)setFirebaseAppInstanceID:(NSString * _Nullable)firebaseAppInstanceID;
+ (void)setTenjinAnalyticsInstallationID:(NSString * _Nullable)tenjinAnalyticsInstallationID;
+ (void)setKochavaDeviceID:(NSString * _Nullable)kochavaDeviceID;
+ (void)setOnesignalID:(NSString * _Nullable)onesignalID;
+ (void)setOnesignalUserID:(NSString * _Nullable)onesignalUserID;
+ (void)setAirshipChannelID:(NSString * _Nullable)airshipChannelID;
+ (void)setPostHogUserID:(NSString * _Nullable)postHogUserId;
@end

SWIFT_CLASS_NAMED("ErrorContainer")
@interface RCErrorContainer : NSObject
@property (nonatomic, readonly) NSInteger code;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull info;
@property (nonatomic, readonly, strong) NSError * _Nonnull error;
- (nonnull instancetype)initWithError:(NSError * _Nonnull)error extraPayload:(NSDictionary<NSString *, id> * _Nonnull)extraPayload OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// A utility class that checks the availability of iOS-specific APIs based on the operating system version.
SWIFT_CLASS("_TtC21PurchasesHybridCommon25IOSAPIAvailabilityChecker")
@interface IOSAPIAvailabilityChecker : NSObject
/// Determines if the Win-Back Offer APIs are available on the current device.
/// Note: This only checks if the APIs are available in the current OS version,
/// not if the SDK is using StoreKit 2, which is required for the APIs.
///
/// returns:
/// <code>true</code> if the Win-Back Offer APIs are available, <code>false</code> otherwise.
- (BOOL)isWinBackOfferAPIAvailable SWIFT_WARN_UNUSED_RESULT;
/// Determines if the enableAdServicesAttributionTokenCollection API is available on the current device.
///
/// returns:
/// <code>true</code> if the <code>CommonFunctionality/enableAdServicesAttributionTokenCollection()</code> API is available,
/// <code>false</code> otherwise.
- (BOOL)isEnableAdServicesAttributionTokenCollectionAPIAvailable SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@interface RCIntroEligibility (SWIFT_EXTENSION(PurchasesHybridCommon))
- (void)noOP;
@end

@interface RCOffering (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end

@interface RCOfferings (SWIFT_EXTENSION(PurchasesHybridCommon))
- (RCOffering * _Nullable)currentOfferingForPlacement:(NSString * _Nonnull)placementIdentifier SWIFT_WARN_UNUSED_RESULT;
@end

@interface RCPromotionalOffer (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rc_dictionary;
@end

@class RCDangerousSettings;
@interface RCPurchases (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode diagnosticsEnabled:(BOOL)diagnosticsEnabled automaticDeviceIdentifierCollectionEnabled:(BOOL)automaticDeviceIdentifierCollectionEnabled preferredLocale:(NSString * _Nullable)preferredLocale SWIFT_WARN_UNUSED_RESULT;
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode diagnosticsEnabled:(BOOL)diagnosticsEnabled automaticDeviceIdentifierCollectionEnabled:(BOOL)automaticDeviceIdentifierCollectionEnabled SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode diagnosticsEnabled:(BOOL)diagnosticsEnabled SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
@end

@class NSDecimalNumber;
@interface RCStoreProduct (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nonnull priceAmount;
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nullable pricePerWeekAmount SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nullable pricePerMonthAmount SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nullable pricePerYearAmount SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable pricePerWeekString SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable pricePerMonthString SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable pricePerYearString SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@end

@interface RCStoreProductDiscount (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nonnull priceAmount;
@end

@interface RCWinBackOffer (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rc_dictionary;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
#ifndef PURCHASESHYBRIDCOMMON_SWIFT_H
#define PURCHASESHYBRIDCOMMON_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import RevenueCat;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PurchasesHybridCommon",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@interface RCPurchaseParamsBuilder (SWIFT_EXTENSION(PurchasesHybridCommon))
- (void)noOP;
@end

@class NSString;
SWIFT_CLASS_NAMED("CommonFunctionality")
@interface RCCommonFunctionality : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL simulatesAskToBuyInSandbox;)
+ (BOOL)simulatesAskToBuyInSandbox SWIFT_WARN_UNUSED_RESULT;
+ (void)setSimulatesAskToBuyInSandbox:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull appUserID;)
+ (NSString * _Nonnull)appUserID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isAnonymous;)
+ (BOOL)isAnonymous SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull hybridCommonVersion;)
+ (NSString * _Nonnull)hybridCommonVersion SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable proxyURLString;)
+ (NSString * _Nullable)proxyURLString SWIFT_WARN_UNUSED_RESULT;
+ (void)setProxyURLString:(NSString * _Nullable)newValue;
@property (nonatomic) BOOL simulatesAskToBuyInSandbox;
+ (void)setAllowSharingStoreAccount:(BOOL)allowSharingStoreAccount SWIFT_DEPRECATED_MSG("Use the set<NetworkId> functions instead");
+ (void)setDebugLogsEnabled:(BOOL)enabled SWIFT_DEPRECATED_MSG("Use setLogLevel instead");
+ (void)setLogLevel:(NSString * _Nonnull)level;
/// Sets a log handler and forwards all logs to completion function.
/// \param onLogReceived Gets a map with two keys: <code>logLevel</code> (<code>LogLevel</code>  name uppercased), and <code>message</code> (the log message)
///
+ (void)setLogHanderOnLogReceived:(void (^ _Nonnull)(NSDictionary<NSString *, NSString *> * _Nonnull))onLogReceived;
+ (void)enableAdServicesAttributionTokenCollection SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(maccatalyst,introduced=14.3) SWIFT_AVAILABILITY(macos,introduced=11.1) SWIFT_AVAILABILITY(ios,introduced=14.3);
+ (void)setPurchasesAreCompletedBy:(NSString * _Nonnull)purchasesAreCompletedBy;
+ (void)invalidateCustomerInfoCache;
+ (void)getStorefrontWithCompletion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable))completion;
+ (void)presentCodeRedemptionSheet SWIFT_AVAILABILITY(maccatalyst,unavailable) SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=14.0);
+ (BOOL)canMakePaymentsWithFeatures:(NSArray<NSNumber *> * _Nonnull)features SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RCCustomerInfo;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (NSDictionary<NSString *, id> * _Nonnull)encodeCustomerInfo:(RCCustomerInfo * _Nonnull)customerInfo SWIFT_WARN_UNUSED_RESULT;
@end

@class RCErrorContainer;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)showManageSubscriptions:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,introduced=10.15) SWIFT_AVAILABILITY(ios,introduced=13.0);
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)recordPurchaseForProductID:(NSString * _Nonnull)productID completion:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,introduced=8.0) SWIFT_AVAILABILITY(tvos,introduced=15.0) SWIFT_AVAILABILITY(macos,introduced=12.0) SWIFT_AVAILABILITY(ios,introduced=15.0);
@end

@class NSNumber;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)showStoreMessagesCompletion:(void (^ _Nonnull)(void))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=16.0);
+ (void)showStoreMessagesForTypes:(NSSet<NSNumber *> * _Nonnull)rawValues completion:(void (^ _Nonnull)(void))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=16.0);
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
/// Fetches and caches the eligible win-back offers for a given product identifier.
/// \param productIdentifier The identifier of the product to fetch win-back offers for.
///
/// \param completion A closure that receives an array of win-back offer dictionaries or an error container if something went wrong.
///
+ (void)eligibleWinBackOffersForProductIdentifier:(NSString * _Nonnull)productIdentifier completionBlock:(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchaseProduct:(NSString * _Nonnull)productIdentifier winBackOfferID:(NSString * _Nonnull)winBackOfferID completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchasePackage:(NSString * _Nonnull)packageIdentifier presentedOfferingContext:(NSDictionary<NSString *, id> * _Nonnull)presentedOfferingContext winBackOfferID:(NSString * _Nonnull)winBackOfferID completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@class RCWebPurchaseRedemption;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (RCWebPurchaseRedemption * _Nullable)parseAsWebPurchaseRedemptionWithUrlString:(NSString * _Nonnull)urlString SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isWebPurchaseRedemptionURL:(NSString * _Nonnull)urlString SWIFT_WARN_UNUSED_RESULT;
+ (void)redeemWebPurchaseWithUrlString:(NSString * _Nonnull)urlString completion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)beginRefundRequestProductId:(NSString * _Nonnull)productId completionBlock:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=15.0);
+ (void)beginRefundRequestEntitlementId:(NSString * _Nonnull)entitlementId completionBlock:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=15.0);
+ (void)beginRefundRequestForActiveEntitlementCompletion:(void (^ _Nonnull)(RCErrorContainer * _Nullable))completion SWIFT_AVAILABILITY(watchos,unavailable) SWIFT_AVAILABILITY(macos,unavailable) SWIFT_AVAILABILITY(tvos,unavailable) SWIFT_AVAILABILITY(ios,introduced=15.0);
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)logInWithAppUserID:(NSString * _Nonnull)appUserID completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)logOutWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)getCustomerInfoWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)getVirtualCurrenciesWithCompletion:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (NSDictionary<NSString *, id> * _Nullable)getCachedVirtualCurrencies SWIFT_WARN_UNUSED_RESULT;
+ (void)invalidateVirtualCurrenciesCache;
+ (void)overridePreferredLocale:(NSString * _Nullable)locale;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)setAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
+ (void)setEmail:(NSString * _Nullable)email;
+ (void)setPhoneNumber:(NSString * _Nullable)phoneNumber;
+ (void)setDisplayName:(NSString * _Nullable)displayName;
+ (void)setPushToken:(NSString * _Nullable)pushToken;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)getOfferingsWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)getCurrentOfferingForPlacement:(NSString * _Nonnull)placementIdentifier completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)syncAttributesAndOfferingsIfNeededWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)checkTrialOrIntroductoryPriceEligibility:(NSArray<NSString *> * _Nonnull)products completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))completion;
+ (void)getProductInfo:(NSArray<NSString *> * _Nonnull)productIds completionBlock:(void (^ _Nonnull)(NSArray<NSDictionary<NSString *, id> *> * _Nonnull))completionBlock;
+ (void)promotionalOfferForProductIdentifier:(NSString * _Nonnull)productIdentifier discount:(NSString * _Nullable)discountIdentifier completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)setMediaSource:(NSString * _Nullable)mediaSource;
+ (void)setCampaign:(NSString * _Nullable)campaign;
+ (void)setAdGroup:(NSString * _Nullable)adGroup;
+ (void)setAd:(NSString * _Nullable)ad;
+ (void)setKeyword:(NSString * _Nullable)keyword;
+ (void)setCreative:(NSString * _Nullable)creative;
@end

@class RCStoreTransaction;
@class NSError;
@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)restorePurchasesWithCompletionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)syncPurchasesWithCompletionBlock:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchase:(NSDictionary<NSString *, id> * _Nonnull)options completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchaseProduct:(NSString * _Nonnull)productIdentifier signedDiscountTimestamp:(NSString * _Nullable)signedDiscountTimestamp completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)purchasePackage:(NSString * _Nonnull)packageIdentifier presentedOfferingContext:(NSDictionary<NSString *, id> * _Nonnull)presentedOfferingContext signedDiscountTimestamp:(NSString * _Nullable)signedDiscountTimestamp completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
+ (void)makeDeferredPurchase:(SWIFT_NOESCAPE void (^ _Nonnull)(void (^ _Nonnull)(RCStoreTransaction * _Nullable, RCCustomerInfo * _Nullable, NSError * _Nullable, BOOL)))startPurchase completionBlock:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nullable, RCErrorContainer * _Nullable))completion;
@end

@interface RCCommonFunctionality (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (void)collectDeviceIdentifiers;
+ (void)setAdjustID:(NSString * _Nullable)adjustID;
+ (void)setCleverTapID:(NSString * _Nullable)cleverTapID;
+ (void)setAppsflyerID:(NSString * _Nullable)appsflyerID;
+ (void)setFBAnonymousID:(NSString * _Nullable)fbAnonymousID;
+ (void)setMparticleID:(NSString * _Nullable)mParticleID;
+ (void)setMixpanelDistinctID:(NSString * _Nullable)mixpanelDistinctID;
+ (void)setFirebaseAppInstanceID:(NSString * _Nullable)firebaseAppInstanceID;
+ (void)setTenjinAnalyticsInstallationID:(NSString * _Nullable)tenjinAnalyticsInstallationID;
+ (void)setKochavaDeviceID:(NSString * _Nullable)kochavaDeviceID;
+ (void)setOnesignalID:(NSString * _Nullable)onesignalID;
+ (void)setOnesignalUserID:(NSString * _Nullable)onesignalUserID;
+ (void)setAirshipChannelID:(NSString * _Nullable)airshipChannelID;
+ (void)setPostHogUserID:(NSString * _Nullable)postHogUserId;
@end

SWIFT_CLASS_NAMED("ErrorContainer")
@interface RCErrorContainer : NSObject
@property (nonatomic, readonly) NSInteger code;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull info;
@property (nonatomic, readonly, strong) NSError * _Nonnull error;
- (nonnull instancetype)initWithError:(NSError * _Nonnull)error extraPayload:(NSDictionary<NSString *, id> * _Nonnull)extraPayload OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// A utility class that checks the availability of iOS-specific APIs based on the operating system version.
SWIFT_CLASS("_TtC21PurchasesHybridCommon25IOSAPIAvailabilityChecker")
@interface IOSAPIAvailabilityChecker : NSObject
/// Determines if the Win-Back Offer APIs are available on the current device.
/// Note: This only checks if the APIs are available in the current OS version,
/// not if the SDK is using StoreKit 2, which is required for the APIs.
///
/// returns:
/// <code>true</code> if the Win-Back Offer APIs are available, <code>false</code> otherwise.
- (BOOL)isWinBackOfferAPIAvailable SWIFT_WARN_UNUSED_RESULT;
/// Determines if the enableAdServicesAttributionTokenCollection API is available on the current device.
///
/// returns:
/// <code>true</code> if the <code>CommonFunctionality/enableAdServicesAttributionTokenCollection()</code> API is available,
/// <code>false</code> otherwise.
- (BOOL)isEnableAdServicesAttributionTokenCollectionAPIAvailable SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@interface RCIntroEligibility (SWIFT_EXTENSION(PurchasesHybridCommon))
- (void)noOP;
@end

@interface RCOffering (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@end

@interface RCOfferings (SWIFT_EXTENSION(PurchasesHybridCommon))
- (RCOffering * _Nullable)currentOfferingForPlacement:(NSString * _Nonnull)placementIdentifier SWIFT_WARN_UNUSED_RESULT;
@end

@interface RCPromotionalOffer (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rc_dictionary;
@end

@class RCDangerousSettings;
@interface RCPurchases (SWIFT_EXTENSION(PurchasesHybridCommon))
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode diagnosticsEnabled:(BOOL)diagnosticsEnabled automaticDeviceIdentifierCollectionEnabled:(BOOL)automaticDeviceIdentifierCollectionEnabled preferredLocale:(NSString * _Nullable)preferredLocale SWIFT_WARN_UNUSED_RESULT;
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode diagnosticsEnabled:(BOOL)diagnosticsEnabled automaticDeviceIdentifierCollectionEnabled:(BOOL)automaticDeviceIdentifierCollectionEnabled SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode diagnosticsEnabled:(BOOL)diagnosticsEnabled SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically verificationMode:(NSString * _Nullable)verificationMode SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
+ (RCPurchases * _Nonnull)configureWithAPIKey:(NSString * _Nonnull)apiKey appUserID:(NSString * _Nullable)appUserID purchasesAreCompletedBy:(NSString * _Nullable)purchasesAreCompletedBy userDefaultsSuiteName:(NSString * _Nullable)userDefaultsSuiteName platformFlavor:(NSString * _Nullable)platformFlavor platformFlavorVersion:(NSString * _Nullable)platformFlavorVersion storeKitVersion:(NSString * _Nonnull)storeKitVersion dangerousSettings:(RCDangerousSettings * _Nullable)dangerousSettings shouldShowInAppMessagesAutomatically:(BOOL)shouldShowInAppMessagesAutomatically SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("Use the full configure method instead");
@end

@class NSDecimalNumber;
@interface RCStoreProduct (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nonnull priceAmount;
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nullable pricePerWeekAmount SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nullable pricePerMonthAmount SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nullable pricePerYearAmount SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable pricePerWeekString SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable pricePerMonthString SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable pricePerYearString SWIFT_AVAILABILITY(watchos,introduced=6.2) SWIFT_AVAILABILITY(tvos,introduced=11.2) SWIFT_AVAILABILITY(macos,introduced=10.13.2) SWIFT_AVAILABILITY(ios,introduced=11.2);
@end

@interface RCStoreProductDiscount (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, strong) NSDecimalNumber * _Nonnull priceAmount;
@end

@interface RCWinBackOffer (SWIFT_EXTENSION(PurchasesHybridCommon))
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rc_dictionary;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
